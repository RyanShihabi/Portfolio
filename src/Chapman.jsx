/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 chapman.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Chapman(props) {
  const { nodes, materials } = useGLTF('/chapman.glb')
  
  const ref = useRef();

  useFrame((state, delta) => (ref.current.rotation.z += (delta*0.5)))

  return (
    <group {...props} dispose={null} ref={ref}>
      <mesh geometry={nodes.Curve.geometry} material={materials['SVGMat.001']} position={[-0.001, 0, 0.001]} />
      <mesh geometry={nodes.Curve001.geometry} material={materials['SVGMat.001']} position={[-0.001, 0, 0.001]} />
      <mesh geometry={nodes.Curve002.geometry} material={materials['SVGMat.001']} position={[-0.001, 0, 0.001]} />
      <mesh geometry={nodes.Curve003.geometry} material={materials['SVGMat.001']} position={[-0.001, 0, 0.001]} />
      <mesh geometry={nodes.Curve004.geometry} material={materials['SVGMat.001']} position={[-0.001, 0, 0.001]} />
      <mesh geometry={nodes.Curve005.geometry} material={materials['SVGMat.001']} position={[-0.001, 0, 0.001]} />
      <mesh geometry={nodes.Curve007.geometry} material={materials['SVGMat.001']} position={[-0.001, 0, 0.001]} rotation={[0, Math.PI / 2, 0]} />
      <mesh geometry={nodes.Curve006.geometry} material={materials['SVGMat.002']} position={[-0.001, 0, 0.001]} />
    </group>
  )
}

useGLTF.preload('/chapman.glb')
